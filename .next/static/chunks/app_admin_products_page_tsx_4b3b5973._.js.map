{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ekrem/OneDrive/Masa%C3%BCst%C3%BC/Stok/stok-takip/app/admin/products/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport supabase from '@/lib/supabase';\r\nimport { Box, Bag, Chip } from 'lucide-react';\r\n\r\ninterface Product {\r\n  id: number;\r\n  name: string;\r\n  sku: string;\r\n  description: string;\r\n  category_id: number | null;\r\n  supplier_id: number | null;\r\n  quantity: number;\r\n  threshold: number;\r\n  icon_name: string;\r\n}\r\n\r\nconst IconMap = {\r\n  Box: <Box size={16} />,\r\n  Bag: <Bag size={16} />,\r\n  Chip: <Chip size={16} />,\r\n};\r\n\r\nexport default function ProductsPage() {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [categories, setCategories] = useState<{ id: number; name: string }[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    sku: '',\r\n    description: '',\r\n    category_id: null as number | null,\r\n    icon_name: 'Box',\r\n    quantity: 0,\r\n    threshold: 5,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const { data, error } = await supabase.from('products').select('*');\r\n      if (error) console.error(error.message);\r\n      else setProducts(data);\r\n    };\r\n\r\n    const fetchCategories = async () => {\r\n      const { data, error } = await supabase.from('categories').select('id, name');\r\n      if (!error && data) {\r\n        setCategories(data);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const handleAddProduct = async () => {\r\n    const { name, sku, quantity, threshold } = form;\r\n    if (!name || !sku || quantity == null || threshold == null) {\r\n      return alert('Please fill in all required fields.');\r\n    }\r\n\r\n    const { data, error } = await supabase.from('products').insert([form]).select();\r\n    if (error) return alert(error.message);\r\n    setProducts((prev) => [...prev, ...(data || [])]);\r\n    setForm({\r\n      name: '',\r\n      sku: '',\r\n      description: '',\r\n      category_id: null,\r\n      icon_name: 'Box',\r\n      quantity: 0,\r\n      threshold: 5,\r\n    });\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const filteredProducts = products.filter((p) =>\r\n    p.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-semibold\">Products</h1>\r\n        <div className=\"flex gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search products...\"\r\n            className=\"border rounded px-3 py-2 text-sm\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select className=\"border rounded px-3 py-2 text-sm\">\r\n            <option>All Categories</option>\r\n            {categories.map((cat) => (\r\n              <option key={cat.id}>{cat.name}</option>\r\n            ))}\r\n          </select>\r\n          <button\r\n            onClick={() => setModalOpen(true)}\r\n            className=\"bg-blue-600 text-white px-4 py-2 rounded text-sm\"\r\n          >\r\n            + Add Product\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"border rounded overflow-hidden\">\r\n        <table className=\"w-full text-sm text-left\">\r\n          <thead className=\"bg-gray-100\">\r\n            <tr>\r\n              <th className=\"p-3\">Product</th>\r\n              <th className=\"p-3\">Category ID</th>\r\n              <th className=\"p-3\">Quantity</th>\r\n              <th className=\"p-3\">Low Stock Alert</th>\r\n              <th className=\"p-3\">Status</th>\r\n              <th className=\"p-3\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredProducts.length === 0 ? (\r\n              <tr>\r\n                <td colSpan={6} className=\"text-center text-gray-500 py-8\">\r\n                  No products found\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              filteredProducts.map((p) => (\r\n                <tr key={p.id} className=\"border-t\">\r\n                  <td className=\"p-3 flex items-center gap-2\">\r\n                    {IconMap[p.icon_name as keyof typeof IconMap]} {p.name}\r\n                  </td>\r\n                  <td className=\"p-3\">{p.category_id ?? 'â€”'}</td>\r\n                  <td className=\"p-3\">{p.quantity}</td>\r\n                  <td className=\"p-3\">\r\n                    {p.quantity <= p.threshold ? (\r\n                      <span className=\"text-red-500\">Yes</span>\r\n                    ) : (\r\n                      <span className=\"text-green-500\">No</span>\r\n                    )}\r\n                  </td>\r\n                  <td className=\"p-3 capitalize\">active</td>\r\n                  <td className=\"p-3 text-right\">\r\n                    <button className=\"text-blue-600 hover:underline text-sm\">Edit</button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {modalOpen && (\r\n        <div className=\"fixed inset-0 bg-black/40 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded shadow-xl w-full max-w-lg\">\r\n            <h2 className=\"text-lg font-bold mb-2\">Add New Product</h2>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">Product Name *</label>\r\n                <input\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.name}\r\n                  onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">SKU *</label>\r\n                <input\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.sku}\r\n                  onChange={(e) => setForm({ ...form, sku: e.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">Category</label>\r\n                <select\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.category_id ?? ''}\r\n                  onChange={(e) => setForm({ ...form, category_id: +e.target.value || null })}\r\n                >\r\n                  <option value=\"\">Select category</option>\r\n                  {categories.map((cat) => (\r\n                    <option key={cat.id} value={cat.id}>\r\n                      {cat.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">Icon</label>\r\n                <select\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.icon_name}\r\n                  onChange={(e) => setForm({ ...form, icon_name: e.target.value })}\r\n                >\r\n                  <option>Box</option>\r\n                  <option>Bag</option>\r\n                  <option>Chip</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">Quantity *</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.quantity}\r\n                  onChange={(e) => setForm({ ...form, quantity: +e.target.value })}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"text-sm font-medium block mb-1\">Threshold *</label>\r\n                <input\r\n                  type=\"number\"\r\n                  className=\"border px-3 py-2 w-full rounded\"\r\n                  value={form.threshold}\r\n                  onChange={(e) => setForm({ ...form, threshold: +e.target.value })}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-4\">\r\n              <label className=\"text-sm font-medium block mb-1\">Description</label>\r\n              <textarea\r\n                className=\"border px-3 py-2 w-full rounded min-h-[80px]\"\r\n                value={form.description}\r\n                onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-6 flex justify-end gap-2\">\r\n              <button onClick={() => setModalOpen(false)} className=\"border px-4 py-2 rounded\">\r\n                Cancel\r\n              </button>\r\n              <button onClick={handleAddProduct} className=\"bg-blue-600 text-white px-4 py-2 rounded\">\r\n                Add Product\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}